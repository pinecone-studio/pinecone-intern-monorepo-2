{
  "name": "concert-client-2025-2cd",
  "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/2CD/concert/frontend",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/next:build",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "outputPath": "dist/apps/2CD/concert/frontend"
      },
      "configurations": {
        "development": {
          "outputPath": "dist/apps/2CD/concert/frontend"
        }
      },
      "dependsOn": [
        {
          "target": "codegen:dev",
          "params": "forward"
        }
      ]
    },
    "serve": {
      "executor": "@nx/next:server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "concert-client-2025-2cd:build",
        "dev": true
      },
      "configurations": {
        "development": {
          "buildTarget": "concert-client-2025-2cd:build:development",
          "dev": true,
          "port": 4201
        },
        "production": {
          "buildTarget": "concert-client-2025-2cd:build:production",
          "dev": false
        }
      },
      "dependsOn": [
        {
          "target": "codegen:dev",
          "params": "forward"
        },
        {
          "target": "export-env",
          "params": "forward"
        }
      ]
    },
    "export": {
      "executor": "@nx/next:export",
      "options": {
        "buildTarget": "concert-client-2025-2cd:build:production"
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "{projectRoot}/jest.config.ts",
        "passWithNoTests": true,
        "codeCoverage": true
      },
      "dependsOn": [
        {
          "target": "codegen:testing",
          "params": "forward"
        }
      ]
    },
    "get-secrets:dev": {
      "executor": "@pinecone-intern-monorepo/secrets:get",
      "defaultConfiguration": "development",
      "configurations": {
        "development": {
          "groups": ["Concert-client-2025-2CD"],
          "env": "dev"
        }
      }
    },
    "get-secrets:testing": {
      "executor": "@pinecone-intern-monorepo/secrets:get",
      "defaultConfiguration": "testing",
      "configurations": {
        "testing": {
          "groups": ["Concert-client-2025-2CD"],
          "env": "test"
        }
      }
    },
    "get-secrets:prod": {
      "executor": "@pinecone-intern-monorepo/secrets:get",
      "defaultConfiguration": "prod",
      "configurations": {
        "prod": {
          "groups": ["Concert-client-2025-2CD"],
          "env": "prod"
        }
      }
    },
    "export-env": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["export $(cat apps/2CD/concert/frontend/.env | xargs)"],
        "parallel": false
      }
    },
    "clean": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["rm -rf dist/apps/2CD/concert/frontend", "rm -rf .vercel"]
      }
    },
    "e2e": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx nx cypress concert-client-2025-2cd"],
        "parallel": false
      },
      "dependsOn": [{ "target": "cypress:clean" }]
    },
    "e2e:open": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx nx cypress concert-client-2025-2cd --watch"],
        "parallel": false
      },
      "dependsOn": [{ "target": "cypress:clean" }]
    },
    "cypress:clean": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rm -rf apps/2CD/concert/frontend/cypress/results",
          "rm -rf apps/2CD/concert/frontend/.nyc_output",
          "rm -rf apps/2CD/concert/frontend/.cy",
          "rm -rf apps/2CD/concert/frontend/coverage"
        ],
        "parallel": false
      }
    },
    "cypress": {
      "executor": "@nx/cypress:cypress",
      "options": {
        "cypressConfig": "apps/2CD/concert/frontend/cypress.config.ts",
        "testingType": "e2e",
        "reporter": "mochawesome",
        "devServerTarget": "concert-client-2025-2cd:serve:development",
        "browser": "chrome"
      },
      "dependsOn": [
        {
          "target": "cypress-generate-all-page-json"
        },
        {
          "target": "get-secrets"
        },
        {
          "target": "export-env"
        }
      ]
    },
    "cypress-generate-all-page-json": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx ts-node apps/2CD/concert/frontend/cypress/utils/get-all-pages.ts"],
        "parallel": false
      }
    },
    "preview": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_YJCeYcBEa1LLVPmvFXMbHmmWNTuP -- vercel pull --yes --environment=preview --token='wo6r3mEUqYSKN7pT5CGE4ucJ'",
          "npx env-cmd -f apps/2CD/concert/frontend/.env vercel build --prod --token='wo6r3mEUqYSKN7pT5CGE4ucJ'",
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_YJCeYcBEa1LLVPmvFXMbHmmWNTuP -- vercel --archive=tgz --prebuilt --prod --token='wo6r3mEUqYSKN7pT5CGE4ucJ'"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "clean"
        },
        {
          "target": "get-secrets:testing"
        },
        {
          "target": "export-env"
        },
        {
          "target": "codegen:testing",
          "params": "forward"
        }
      ]
    },

    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/2CD/concert/frontend/**/*.{ts,tsx,js,jsx}"]
      }
    },
    "codegen:prod": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["graphql-codegen --config ./apps/2CD/concert/frontend/codegen.ts"]
      },
      "dependsOn": [
        {
          "target": "get-secrets:prod"
        }
      ]
    },
    "codegen:dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["graphql-codegen --config ./apps/2CD/concert/frontend/codegen.ts"]
      },
      "dependsOn": [
        {
          "target": "get-secrets:dev"
        }
      ]
    },
    "codegen:testing": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["graphql-codegen --config ./apps/2CD/concert/frontend/codegen.ts"]
      },
      "dependsOn": [
        {
          "target": "get-secrets:testing"
        }
      ]
    },
    "deploy-testing": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_YJCeYcBEa1LLVPmvFXMbHmmWNTuP -- vercel pull --yes --environment=production --token=wo6r3mEUqYSKN7pT5CGE4ucJ",
          "npx env-cmd -f apps/2CD/concert/frontend/.env vercel build --prod --token=wo6r3mEUqYSKN7pT5CGE4ucJ",
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_YJCeYcBEa1LLVPmvFXMbHmmWNTuP -- vercel --prebuilt --prod --token=wo6r3mEUqYSKN7pT5CGE4ucJ"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "clean"
        },
        {
          "target": "get-secrets:testing"
        },
        {
          "target": "export-env"
        },
        {
          "target": "codegen:testing",
          "params": "forward"
        }
      ]
    },
    "deploy-prod": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_ZqYAemVCMAh90TYVFat1ZU47ZBJB -- vercel pull --yes --environment=production --token=wo6r3mEUqYSKN7pT5CGE4ucJ",
          "npx env-cmd -f apps/2CD/concert/frontend/.env vercel build --prod --token=wo6r3mEUqYSKN7pT5CGE4ucJ",
          "npx dotenv -v VERCEL_ORG_ID=team_dW0Tpe7DOfLR9xLRD2tSqkVp -v VERCEL_PROJECT_ID=prj_ZqYAemVCMAh90TYVFat1ZU47ZBJB -- vercel --prebuilt --prod --token=wo6r3mEUqYSKN7pT5CGE4ucJ"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "clean"
        },
        {
          "target": "get-secrets:prod"
        },
        {
          "target": "export-env"
        },
        {
          "target": "codegen:prod",
          "params": "forward"
        }
      ]
    }
  },
  "tags": []
}
